begin;
    -- No issues
    select * from lint."0002_auth_users_exposed";
 name | level | facing | description | detail | remediation | metadata | cache_key 
------+-------+--------+-------------+--------+-------------+----------+-----------
(0 rows)

    -- Create a view that exposes auth.users
    create view public.oops as
    select * from auth.users;
    select * from lint."0002_auth_users_exposed";
        name        | level |  facing  |                                                                            description                                                                             |                                                      detail                                                       |                                                                                                  remediation                                                                                                  |                                   metadata                                   |           cache_key            

 auth_users_exposed | WARN  | EXTERNAL | Detects if auth.users is exposed to anon or authenticated roles via a view or materialized view in the public schema, potentially compromising user data security. | View/Materialized View "oops" in the public schema may expose \`auth.users\` data to anon or authenticated roles. | Review the View/Materialized View definition to ensure it does not unintentionally expose sensitive user data. Apply proper role permissions and consider using row-level security to protect sensitive data. | {"name": "oops", "type": "view", "schema": "public", "exposed_to": ["anon"]} | auth_users_exposed_public_oops
(1 row)

rollback;
